<style>
    .progressIndicator {
        position: relative;
    }

    .loading:not(:required):after {
        font-size: 7px !important;
    }
</style>
<script>
    let columnsData = [
        {
            data: "contractId", render: function (data, type, row) {
                return "<a href='CustomerItem.php?action=displayRenewalContract&customerItemID=" + row.contractId + "' target='_blank'>" + data + "</a>";
            }
        },
        {data: "users", width: "5%"},
        {data: "customerName"},
        {
            data: "siteAddress", sortable: false
        },
        {data: 'itemDescription'},
        {
            data: 'renewalStatus'
        },
        {
            data: 'startDate',
            name: 'startDate',
            render: function (data) {
                return data ? moment(data).format('DD/MM/YYYY') : '';
            }
        },
        {
            data: 'expiryDate',
            render: function (data) {
                return data ? moment(data).format('DD/MM/YYYY') : '';
            }
        },
        {
            data: 'value'
        },
        {
            data: 'balance'
        },
        {
            data: 'topUp'
        }
    ];
    let table = null;
    window.addEventListener('DOMContentLoaded', function () {
        $('#example thead tr').clone(true).appendTo('#example thead');
        $('#example thead tr:eq(1) th').each(function (i) {
            var title = $(this).text();
            if ($(this).data().noSearch) {
                $(this).html('');
                return;
            }
            let inputLength = null;
            if (this.dataset.length) {
                inputLength = this.dataset.length;
            }
            let defaultValue = null;
            if (this.dataset.defaultValue) {
                defaultValue = this.dataset.defaultValue
            }
            let inputType = null;
            console.log(this.dataset);
            if (this.dataset.inputType) {
                inputType = this.dataset.inputType;
            }

            $(this).html('<input type="' + (inputType ? inputType : 'text') + '" placeholder="Search ' + title + '" ' + (inputLength ? "" : "") + (defaultValue ? 'value=' + defaultValue : '') + ' />');
            const autocompleteURL = $(this).data().autocompleteUrl;
            const autocompleteTermField = 'term' || $(this).data().autocompleteTermField;
            const performSearch = function (value, column) {
                if (table.column(column).search() != value) {
                    table.column(column)
                        .search(value);
                    table.draw();
                    // const newURL = UpdateQueryString(columnsData[column].data, value);
                    // window.history.pushState({}, "", newURL);
                }
            };

            const filterInput = $(this).find('input');
            filterInput.autocomplete({
                minLength: 0,
                source: function (request, responseCB) {
                    const data = {};
                    if (!autocompleteURL) {
                        return responseCB();
                    }
                    data[autocompleteTermField] = request.term;
                    $.ajax(
                        autocompleteURL,
                        {
                            method: 'POST',
                            dataType: 'json',
                            data: data
                        }
                    ).then(response => {
                        if (response.length > 40) {
                            response = response.slice(0, 40);
                            response.unshift({
                                id: -1,
                                name: 'Keep typing to filter, there are more results not shown here'
                            });
                        }
                        responseCB(response.map(x => ({label: x.name, value: x.id})));
                    })

                },
                delay: 200,
                select: function (event, ui) {
                    event.preventDefault();
                    event.target.value = ui.item.label;
                    performSearch(ui.item.label, i);
                }
            }).focus(function () {
                $(this).autocomplete("search", $(this).val());
            }).on('change', function () {
                performSearch(filterInput[0].value, i);
            });
        });

        table = $('#example').DataTable({
            dom: "lrtip",
            serverSide: true,
            ajax: '?action=getData',
            orderCellsTop: true,
            fixedHeader: true,
            pageLength: 100,
            columns: columnsData,
            lengthMenu: [50, 100, 150, 200],
            footerCallback: (row, data, start, end, display) => {
                const total = table.column(9, {page: 'current'}).data().reduce((acc, value) => acc += (+value), 0);
                $(table.column(9).footer()).html(
                    "Total Balance: &pound;" + total
                )
            }
        });

        table.columns(5).search('R');
        table.draw();
    })
</script>
<table id="example"
       class="display"
       style="width:100%"
>
    <thead>
    <tr>
        <th>ID</th>
        <th data-length="5">Users</th>
        <th data-autocomplete-url="/Customer.php?action=searchName">Customer</th>
        <th>Site</th>
        <th>Item</th>
        <th data-default-value="R">Renewal Status</th>
        <th data-input-type="date">Start</th>
        <th data-input-type="date">Expiry</th>
        <th>Value</th>
        <th>Balance</th>
        <th>Top-Up</th>
    </tr>
    </thead>
    <tfoot>
    <tr>
        <th>ID</th>
        <th>Users</th>
        <th>Customer</th>
        <th>Site</th>
        <th>Item</th>
        <th>Renewal Status</th>
        <th>Start</th>
        <th>Expiry</th>
        <th>Value</th>
        <th>Balance</th>
        <th>Top-Up</th>
    </tr>
    </tfoot>
</table>